/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package examples;

import com.fazecast.jSerialComm.*;
import java.awt.event.ActionListener;



import java.nio.Buffer;

import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
/**
 *
 * @author koalium
 */
public class Forming extends javax.swing.JFrame{

	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form Forming
	 */
	public Forming() {
		this.strArray = new Vector();
		this.sendingBufferchar = new char[32];
		 this.sendingBufferbyte = new byte[33];
	 this.sendingBufferstr = new String();
		
		initComponents();

		capsulStartCharRecived = false;
		capsulatedFrameRecived = false;
		recivedStringArray = new String[10];
		recivedStringBuffer = "";
		
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                mainPanel = new javax.swing.JPanel();
                layeredPaneTopMainPane = new javax.swing.JLayeredPane();
                jLabel1 = new javax.swing.JLabel();
                comboBoxSerialPort = new javax.swing.JComboBox<>();
                labelConnection = new javax.swing.JLabel();
                formattedTextFieldBaud = new javax.swing.JFormattedTextField();
                jLabel2 = new javax.swing.JLabel();
                jButtonConnect = new javax.swing.JButton();
                jButtonRefresh = new javax.swing.JButton();
                jSeparator5 = new javax.swing.JSeparator();
                jLayeredPaneControl = new javax.swing.JLayeredPane();
                jLayeredPanePressure = new javax.swing.JLayeredPane();
                jLabel3 = new javax.swing.JLabel();
                jFormattedTextFieldPressure = new javax.swing.JFormattedTextField();
                jLayeredPaneHeight = new javax.swing.JLayeredPane();
                jLabel4 = new javax.swing.JLabel();
                jFormattedTextFieldHeghit = new javax.swing.JFormattedTextField();
                jLayeredPane1 = new javax.swing.JLayeredPane();
                jScrollBarPwm = new javax.swing.JScrollBar();
                jLabelPwm = new javax.swing.JLabel();
                jLayeredPaneControls = new javax.swing.JLayeredPane();
                jButtonPump = new javax.swing.JButton();
                jButtonDrain = new javax.swing.JButton();
                jButtonStop = new javax.swing.JButton();
                jButtonRun = new javax.swing.JButton();
                jButtonSave = new javax.swing.JButton();
                jLayeredPane2 = new javax.swing.JLayeredPane();
                jProgressBarJobDone = new javax.swing.JProgressBar();
                jLabelProgress = new javax.swing.JLabel();
                jLabelProcess = new javax.swing.JLabel();
                jPanel1 = new javax.swing.JPanel();
                jPanel2 = new javax.swing.JPanel();
                jLabelMonitorPressure = new javax.swing.JLabel();
                jPanel3 = new javax.swing.JPanel();
                jLabelMonitorHeight = new javax.swing.JLabel();
                jPanel4 = new javax.swing.JPanel();
                jProgressBarMonitorMotorPower = new javax.swing.JProgressBar();
                jLabelMonitorMotorPower = new javax.swing.JLabel();
                jLayeredPane3 = new javax.swing.JLayeredPane();
                jLabel6 = new javax.swing.JLabel();
                jLayeredPane4 = new javax.swing.JLayeredPane();
                jScrollPane1 = new javax.swing.JScrollPane();
                jTextAreaLogs = new javax.swing.JTextArea();
                menuBar = new javax.swing.JMenuBar();
                fileMenu = new javax.swing.JMenu();
                runMenuItem = new javax.swing.JMenuItem();
                jSeparator1 = new javax.swing.JPopupMenu.Separator();
                newMenuItem = new javax.swing.JMenuItem();
                openMenuItem = new javax.swing.JMenuItem();
                jSeparator3 = new javax.swing.JPopupMenu.Separator();
                saveMenuItem = new javax.swing.JMenuItem();
                saveAsMenuItem = new javax.swing.JMenuItem();
                jSeparator2 = new javax.swing.JPopupMenu.Separator();
                exitMenuItem = new javax.swing.JMenuItem();
                portMenu = new javax.swing.JMenu();
                refreshMenuItem = new javax.swing.JMenuItem();
                connectMenuItem = new javax.swing.JMenuItem();
                CloseMenuItem = new javax.swing.JMenuItem();
                jSeparator4 = new javax.swing.JPopupMenu.Separator();
                checkMenuItem = new javax.swing.JMenuItem();
                helpMenu = new javax.swing.JMenu();
                contentsMenuItem = new javax.swing.JMenuItem();
                aboutMenuItem = new javax.swing.JMenuItem();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                layeredPaneTopMainPane.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Connection:"), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));

                jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel1.setLabelFor(comboBoxSerialPort);
                jLabel1.setText("Ports:");

                comboBoxSerialPort.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
                comboBoxSerialPort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM" }));

                labelConnection.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                labelConnection.setLabelFor(layeredPaneTopMainPane);
                labelConnection.setText("system not connected... select the port");

                formattedTextFieldBaud.setColumns(8);
                formattedTextFieldBaud.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
                formattedTextFieldBaud.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                formattedTextFieldBaud.setText("115200");
                formattedTextFieldBaud.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusLost(java.awt.event.FocusEvent evt) {
                                formattedTextFieldBaudFocusLost(evt);
                        }
                });

                jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
                jLabel2.setLabelFor(formattedTextFieldBaud);
                jLabel2.setText("BaudRate");

                jButtonConnect.setText("Connect");
                jButtonConnect.setAutoscrolls(true);
                jButtonConnect.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonConnectActionPerformed(evt);
                        }
                });

                jButtonRefresh.setText("Refresh");
                jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonRefreshActionPerformed(evt);
                        }
                });

                layeredPaneTopMainPane.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
                layeredPaneTopMainPane.setLayer(comboBoxSerialPort, javax.swing.JLayeredPane.DEFAULT_LAYER);
                layeredPaneTopMainPane.setLayer(labelConnection, javax.swing.JLayeredPane.DEFAULT_LAYER);
                layeredPaneTopMainPane.setLayer(formattedTextFieldBaud, javax.swing.JLayeredPane.DEFAULT_LAYER);
                layeredPaneTopMainPane.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
                layeredPaneTopMainPane.setLayer(jButtonConnect, javax.swing.JLayeredPane.DEFAULT_LAYER);
                layeredPaneTopMainPane.setLayer(jButtonRefresh, javax.swing.JLayeredPane.DEFAULT_LAYER);

                javax.swing.GroupLayout layeredPaneTopMainPaneLayout = new javax.swing.GroupLayout(layeredPaneTopMainPane);
                layeredPaneTopMainPane.setLayout(layeredPaneTopMainPaneLayout);
                layeredPaneTopMainPaneLayout.setHorizontalGroup(
                        layeredPaneTopMainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layeredPaneTopMainPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxSerialPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(formattedTextFieldBaud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonConnect)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonRefresh)
                                .addGap(18, 18, 18)
                                .addComponent(labelConnection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                );
                layeredPaneTopMainPaneLayout.setVerticalGroup(
                        layeredPaneTopMainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layeredPaneTopMainPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layeredPaneTopMainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(comboBoxSerialPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(formattedTextFieldBaud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)
                                        .addComponent(jButtonConnect)
                                        .addComponent(jButtonRefresh)
                                        .addComponent(labelConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                jLayeredPaneControl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Control Panel:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
                jLayeredPaneControl.setAutoscrolls(true);

                jLayeredPanePressure.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

                jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
                jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel3.setText("Pressure:");

                jFormattedTextFieldPressure.setColumns(6);
                jFormattedTextFieldPressure.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
                jFormattedTextFieldPressure.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                jFormattedTextFieldPressure.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

                jLayeredPanePressure.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPanePressure.setLayer(jFormattedTextFieldPressure, javax.swing.JLayeredPane.DEFAULT_LAYER);

                javax.swing.GroupLayout jLayeredPanePressureLayout = new javax.swing.GroupLayout(jLayeredPanePressure);
                jLayeredPanePressure.setLayout(jLayeredPanePressureLayout);
                jLayeredPanePressureLayout.setHorizontalGroup(
                        jLayeredPanePressureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPanePressureLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jLayeredPanePressureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jLayeredPanePressureLayout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(jFormattedTextFieldPressure, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap())
                );
                jLayeredPanePressureLayout.setVerticalGroup(
                        jLayeredPanePressureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPanePressureLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextFieldPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                jLayeredPaneHeight.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

                jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
                jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel4.setText("Heghit:");

                jFormattedTextFieldHeghit.setColumns(5);
                jFormattedTextFieldHeghit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
                jFormattedTextFieldHeghit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                jFormattedTextFieldHeghit.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
                jFormattedTextFieldHeghit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

                jLayeredPaneHeight.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneHeight.setLayer(jFormattedTextFieldHeghit, javax.swing.JLayeredPane.DEFAULT_LAYER);

                javax.swing.GroupLayout jLayeredPaneHeightLayout = new javax.swing.GroupLayout(jLayeredPaneHeight);
                jLayeredPaneHeight.setLayout(jLayeredPaneHeightLayout);
                jLayeredPaneHeightLayout.setHorizontalGroup(
                        jLayeredPaneHeightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPaneHeightLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jLayeredPaneHeightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jLayeredPaneHeightLayout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(jFormattedTextFieldHeghit))
                                .addContainerGap())
                );
                jLayeredPaneHeightLayout.setVerticalGroup(
                        jLayeredPaneHeightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPaneHeightLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextFieldHeghit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );

                jLayeredPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Motor Power", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED))); // NOI18N

                jScrollBarPwm.setMaximum(101);
                jScrollBarPwm.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
                jScrollBarPwm.setToolTipText("");
                jScrollBarPwm.setUnitIncrement(4);
                jScrollBarPwm.setVisibleAmount(4);
                jScrollBarPwm.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
                        public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                                jScrollBarPwmAdjustmentValueChanged(evt);
                        }
                });

                jLabelPwm.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
                jLabelPwm.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jLabelPwm.setLabelFor(jScrollBarPwm);
                jLabelPwm.setText("0");

                jLayeredPane1.setLayer(jScrollBarPwm, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPane1.setLayer(jLabelPwm, javax.swing.JLayeredPane.DEFAULT_LAYER);

                javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
                jLayeredPane1.setLayout(jLayeredPane1Layout);
                jLayeredPane1Layout.setHorizontalGroup(
                        jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollBarPwm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                                .addComponent(jLabelPwm, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                );
                jLayeredPane1Layout.setVerticalGroup(
                        jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollBarPwm, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelPwm)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                jLayeredPaneControls.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manual Controls:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED))); // NOI18N

                jButtonPump.setBackground(new java.awt.Color(0, 204, 255));
                jButtonPump.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
                jButtonPump.setForeground(new java.awt.Color(0, 0, 0));
                jButtonPump.setText("Pump");
                jButtonPump.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                jButtonPumpMousePressed(evt);
                        }
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                jButtonPumpMouseReleased(evt);
                        }
                });
                jButtonPump.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonPumpActionPerformed(evt);
                        }
                });
                jButtonPump.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                                jButtonPumpKeyPressed(evt);
                        }
                });

                jButtonDrain.setBackground(new java.awt.Color(255, 153, 153));
                jButtonDrain.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
                jButtonDrain.setForeground(new java.awt.Color(0, 0, 0));
                jButtonDrain.setText("Drain");
                jButtonDrain.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonDrainActionPerformed(evt);
                        }
                });

                jButtonStop.setBackground(new java.awt.Color(255, 0, 0));
                jButtonStop.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
                jButtonStop.setForeground(new java.awt.Color(0, 0, 0));
                jButtonStop.setText("Stop");
                jButtonStop.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonStopActionPerformed(evt);
                        }
                });

                jButtonRun.setBackground(new java.awt.Color(102, 255, 153));
                jButtonRun.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
                jButtonRun.setForeground(new java.awt.Color(0, 0, 0));
                jButtonRun.setText("Run");
                jButtonRun.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonRunActionPerformed(evt);
                        }
                });

                jButtonSave.setBackground(new java.awt.Color(255, 102, 255));
                jButtonSave.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
                jButtonSave.setForeground(new java.awt.Color(0, 0, 0));
                jButtonSave.setText("Save");
                jButtonSave.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonSaveActionPerformed(evt);
                        }
                });

                jLayeredPaneControls.setLayer(jButtonPump, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneControls.setLayer(jButtonDrain, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneControls.setLayer(jButtonStop, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneControls.setLayer(jButtonRun, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneControls.setLayer(jButtonSave, javax.swing.JLayeredPane.DEFAULT_LAYER);

                javax.swing.GroupLayout jLayeredPaneControlsLayout = new javax.swing.GroupLayout(jLayeredPaneControls);
                jLayeredPaneControls.setLayout(jLayeredPaneControlsLayout);
                jLayeredPaneControlsLayout.setHorizontalGroup(
                        jLayeredPaneControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPaneControlsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButtonPump)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDrain)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonStop)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonRun)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSave)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                jLayeredPaneControlsLayout.setVerticalGroup(
                        jLayeredPaneControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPaneControlsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jLayeredPaneControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonPump, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonDrain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                );

                jLayeredPane2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Progress:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED))); // NOI18N

                jProgressBarJobDone.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                jProgressBarJobDoneStateChanged(evt);
                        }
                });

                jLabelProgress.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
                jLabelProgress.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabelProgress.setText("0");
                jLabelProgress.setBorder(javax.swing.BorderFactory.createEtchedBorder());

                jLabelProcess.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
                jLabelProcess.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jLabelProcess.setText(" ");

                jLayeredPane2.setLayer(jProgressBarJobDone, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPane2.setLayer(jLabelProgress, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPane2.setLayer(jLabelProcess, javax.swing.JLayeredPane.DEFAULT_LAYER);

                javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
                jLayeredPane2.setLayout(jLayeredPane2Layout);
                jLayeredPane2Layout.setHorizontalGroup(
                        jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jProgressBarJobDone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                                .addComponent(jLabelProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabelProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap())
                );
                jLayeredPane2Layout.setVerticalGroup(
                        jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jProgressBarJobDone, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelProgress)
                                        .addComponent(jLabelProcess))
                                .addContainerGap(16, Short.MAX_VALUE))
                );

                jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Monitoring:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12)), javax.swing.BorderFactory.createEtchedBorder())); // NOI18N

                jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pressure:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 3, 12)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED))); // NOI18N

                jLabelMonitorPressure.setBackground(new java.awt.Color(153, 153, 255));
                jLabelMonitorPressure.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
                jLabelMonitorPressure.setForeground(new java.awt.Color(51, 0, 0));
                jLabelMonitorPressure.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabelMonitorPressure.setText("101.55");
                jLabelMonitorPressure.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.pink, java.awt.Color.orange));

                javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
                jPanel2.setLayout(jPanel2Layout);
                jPanel2Layout.setHorizontalGroup(
                        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelMonitorPressure, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                .addContainerGap())
                );
                jPanel2Layout.setVerticalGroup(
                        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelMonitorPressure, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addContainerGap())
                );

                jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Height:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 3, 12)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED))); // NOI18N

                jLabelMonitorHeight.setBackground(new java.awt.Color(153, 153, 255));
                jLabelMonitorHeight.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
                jLabelMonitorHeight.setForeground(new java.awt.Color(51, 0, 51));
                jLabelMonitorHeight.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabelMonitorHeight.setText("101.55");
                jLabelMonitorHeight.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.orange, java.awt.Color.pink));

                javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
                jPanel3.setLayout(jPanel3Layout);
                jPanel3Layout.setHorizontalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelMonitorHeight, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                .addContainerGap())
                );
                jPanel3Layout.setVerticalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelMonitorHeight, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addContainerGap())
                );

                jPanel4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Motor Power:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 14)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.gray, java.awt.Color.black, java.awt.Color.darkGray))); // NOI18N

                jProgressBarMonitorMotorPower.setForeground(new java.awt.Color(51, 255, 0));

                jLabelMonitorMotorPower.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
                jLabelMonitorMotorPower.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabelMonitorMotorPower.setText("88%");
                jLabelMonitorMotorPower.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

                javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
                jPanel4.setLayout(jPanel4Layout);
                jPanel4Layout.setHorizontalGroup(
                        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jProgressBarMonitorMotorPower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabelMonitorMotorPower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                );
                jPanel4Layout.setVerticalGroup(
                        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jProgressBarMonitorMotorPower, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelMonitorMotorPower)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addContainerGap())
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                );
                jPanel1Layout.setVerticalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                );

                jLayeredPaneControl.setLayer(jLayeredPanePressure, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneControl.setLayer(jLayeredPaneHeight, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneControl.setLayer(jLayeredPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneControl.setLayer(jLayeredPaneControls, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneControl.setLayer(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
                jLayeredPaneControl.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

                javax.swing.GroupLayout jLayeredPaneControlLayout = new javax.swing.GroupLayout(jLayeredPaneControl);
                jLayeredPaneControl.setLayout(jLayeredPaneControlLayout);
                jLayeredPaneControlLayout.setHorizontalGroup(
                        jLayeredPaneControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPaneControlLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jLayeredPaneControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLayeredPane2)
                                        .addGroup(jLayeredPaneControlLayout.createSequentialGroup()
                                                .addGroup(jLayeredPaneControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLayeredPaneHeight)
                                                        .addComponent(jLayeredPanePressure))
                                                .addGap(18, 18, 18)
                                                .addGroup(jLayeredPaneControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLayeredPaneControls)
                                                        .addComponent(jLayeredPane1))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                jLayeredPaneControlLayout.setVerticalGroup(
                        jLayeredPaneControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPaneControlLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jLayeredPaneControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jLayeredPaneControlLayout.createSequentialGroup()
                                                .addGroup(jLayeredPaneControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLayeredPane1)
                                                        .addComponent(jLayeredPanePressure))
                                                .addGap(12, 12, 12)
                                                .addGroup(jLayeredPaneControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLayeredPaneControls)
                                                        .addComponent(jLayeredPaneHeight))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(23, Short.MAX_VALUE))))
                );

                jLayeredPane3.setBackground(new java.awt.Color(153, 153, 153));
                jLayeredPane3.setForeground(new java.awt.Color(0, 51, 51));

                jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
                jLabel6.setForeground(new java.awt.Color(51, 51, 0));
                jLabel6.setText("CopyRight by Koalium 2024");

                jLayeredPane3.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

                javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
                jLayeredPane3.setLayout(jLayeredPane3Layout);
                jLayeredPane3Layout.setHorizontalGroup(
                        jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel6))
                );
                jLayeredPane3Layout.setVerticalGroup(
                        jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                                .addGap(0, 9, Short.MAX_VALUE)
                                .addComponent(jLabel6))
                );

                jLayeredPane4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Log:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED))); // NOI18N

                jTextAreaLogs.setColumns(20);
                jTextAreaLogs.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
                jTextAreaLogs.setRows(5);
                jTextAreaLogs.addInputMethodListener(new java.awt.event.InputMethodListener() {
                        public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                        }
                        public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                                jTextAreaLogsInputMethodTextChanged(evt);
                        }
                });
                jScrollPane1.setViewportView(jTextAreaLogs);

                jLayeredPane4.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

                javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
                jLayeredPane4.setLayout(jLayeredPane4Layout);
                jLayeredPane4Layout.setHorizontalGroup(
                        jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1)
                                .addContainerGap())
                );
                jLayeredPane4Layout.setVerticalGroup(
                        jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                .addContainerGap())
                );

                javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
                mainPanel.setLayout(mainPanelLayout);
                mainPanelLayout.setHorizontalGroup(
                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(layeredPaneTopMainPane)
                        .addComponent(jLayeredPaneControl)
                        .addComponent(jLayeredPane3)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLayeredPane4)
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jSeparator5)))
                                .addContainerGap())
                );
                mainPanelLayout.setVerticalGroup(
                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(layeredPaneTopMainPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLayeredPaneControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLayeredPane4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                );

                fileMenu.setMnemonic('f');
                fileMenu.setText("File");

                runMenuItem.setText("Run");
                runMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                runMenuItemActionPerformed(evt);
                        }
                });
                fileMenu.add(runMenuItem);
                fileMenu.add(jSeparator1);

                newMenuItem.setText("New");
                newMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                newMenuItemActionPerformed(evt);
                        }
                });
                fileMenu.add(newMenuItem);

                openMenuItem.setMnemonic('o');
                openMenuItem.setText("Open");
                openMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                openMenuItemActionPerformed(evt);
                        }
                });
                fileMenu.add(openMenuItem);
                fileMenu.add(jSeparator3);

                saveMenuItem.setMnemonic('s');
                saveMenuItem.setText("Save");
                saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                saveMenuItemActionPerformed(evt);
                        }
                });
                fileMenu.add(saveMenuItem);

                saveAsMenuItem.setMnemonic('a');
                saveAsMenuItem.setText("Save As ...");
                saveAsMenuItem.setDisplayedMnemonicIndex(5);
                saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                saveAsMenuItemActionPerformed(evt);
                        }
                });
                fileMenu.add(saveAsMenuItem);
                fileMenu.add(jSeparator2);

                exitMenuItem.setMnemonic('x');
                exitMenuItem.setText("Exit");
                exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                exitMenuItemActionPerformed(evt);
                        }
                });
                fileMenu.add(exitMenuItem);

                menuBar.add(fileMenu);

                portMenu.setMnemonic('e');
                portMenu.setText("Port");

                refreshMenuItem.setMnemonic('t');
                refreshMenuItem.setText("Refresh");
                refreshMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                refreshMenuItemActionPerformed(evt);
                        }
                });
                portMenu.add(refreshMenuItem);

                connectMenuItem.setMnemonic('y');
                connectMenuItem.setText("Connect");
                connectMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                connectMenuItemActionPerformed(evt);
                        }
                });
                portMenu.add(connectMenuItem);

                CloseMenuItem.setMnemonic('p');
                CloseMenuItem.setText("Close");
                CloseMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                CloseMenuItemActionPerformed(evt);
                        }
                });
                portMenu.add(CloseMenuItem);
                portMenu.add(jSeparator4);

                checkMenuItem.setText("Check");
                checkMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                checkMenuItemActionPerformed(evt);
                        }
                });
                portMenu.add(checkMenuItem);

                menuBar.add(portMenu);

                helpMenu.setMnemonic('h');
                helpMenu.setText("Help");

                contentsMenuItem.setMnemonic('c');
                contentsMenuItem.setText("Contents");
                contentsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                contentsMenuItemActionPerformed(evt);
                        }
                });
                helpMenu.add(contentsMenuItem);

                aboutMenuItem.setMnemonic('a');
                aboutMenuItem.setText("About");
                aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                aboutMenuItemActionPerformed(evt);
                        }
                });
                helpMenu.add(aboutMenuItem);

                menuBar.add(helpMenu);

                setJMenuBar(menuBar);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
	    System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

        private void refreshMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshMenuItemActionPerformed
                
		reComboBox();
        }//GEN-LAST:event_refreshMenuItemActionPerformed

        private void connectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectMenuItemActionPerformed
               connecting();
        }//GEN-LAST:event_connectMenuItemActionPerformed

        private void CloseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseMenuItemActionPerformed
                // TODO add your handling code here:
		if (sp.isOpen()) {
			sp.closePort();
			labelConnection.setText(sp.toString() + "  ...CLOSE IT...");
		} else {
			labelConnection.setText(sp.toString() + "  ...not opened yet..");
		}
        }//GEN-LAST:event_CloseMenuItemActionPerformed

        private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
                // TODO add your handling code here:
		serialSend(_new_,sp);
        }//GEN-LAST:event_newMenuItemActionPerformed

        private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_openMenuItemActionPerformed

        private void runMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runMenuItemActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_runMenuItemActionPerformed

        private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
                // TODO add your handling code here:
		serialSend(_set_,sp);
		
        }//GEN-LAST:event_saveMenuItemActionPerformed

        private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_saveAsMenuItemActionPerformed

        private void checkMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMenuItemActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_checkMenuItemActionPerformed

        private void contentsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentsMenuItemActionPerformed
                // TODO add your handling code here:
		timi();
        }//GEN-LAST:event_contentsMenuItemActionPerformed

        private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
                // TODO add your handling code here:
		long mil = System.currentTimeMillis();
		
		
		while(System.currentTimeMillis()-mil<1000){
			if(sp.bytesAvailable()>0){
				byte[] bb = new byte[sp.bytesAvailable()];
				sp.readBytes(bb, sp.bytesAvailable());
				for(byte nbb : bb ){
					jTextAreaLogs.append(String.valueOf((char)(nbb)));
				}
				
			}
			
		}
        }//GEN-LAST:event_aboutMenuItemActionPerformed

        private void jButtonPumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPumpActionPerformed
                // TODO add your handling code here:
		serialSend(_pmp_,sp);
		this.dataTosend|=128;
        }//GEN-LAST:event_jButtonPumpActionPerformed

        private void jButtonDrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDrainActionPerformed
                // TODO add your handling code here:
		serialSend(_rls_,sp);
		this.dataTosend|=64;
        }//GEN-LAST:event_jButtonDrainActionPerformed

        private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopActionPerformed
                // TODO add your handling code here:
		serialSend(_stp_,sp);
		this.dataTosend|=32;
        }//GEN-LAST:event_jButtonStopActionPerformed

        private void jButtonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunActionPerformed
                // TODO add your handling code here:
		serialSend(_run_,sp);
		this.dataTosend|=16;
        }//GEN-LAST:event_jButtonRunActionPerformed

        private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
                // TODO add your handling code here:
		serialSend(_set_,sp);
		this.dataTosend|=8;
        }//GEN-LAST:event_jButtonSaveActionPerformed

        private void jScrollBarPwmAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_jScrollBarPwmAdjustmentValueChanged
                // TODO add your handling code here:
		pwm = jScrollBarPwm.getValue();
		jLabelPwm.setText(jScrollBarPwm.getValue()+"");
		serialSend(_pwm_+jScrollBarPwm.getValue(),sp);
		this.dataTosend|=4;
        }//GEN-LAST:event_jScrollBarPwmAdjustmentValueChanged

        private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
                // TODO add your handling code here:
		reComboBox();
        }//GEN-LAST:event_jButtonRefreshActionPerformed

        private void jButtonConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectActionPerformed
                // TODO add your handling code here:
		connecting();
        }//GEN-LAST:event_jButtonConnectActionPerformed

        private void formattedTextFieldBaudFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formattedTextFieldBaudFocusLost
                // TODO add your handling code here:
		//BaudRate = Integer.parseInt(formattedTextFieldBaud.getText());
        }//GEN-LAST:event_formattedTextFieldBaudFocusLost

        private void jProgressBarJobDoneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jProgressBarJobDoneStateChanged
                // TODO add your handling code here:
		jLabelProgress.setText(jProgressBarJobDone.getValue()+"");
        }//GEN-LAST:event_jProgressBarJobDoneStateChanged

        private void jTextAreaLogsInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextAreaLogsInputMethodTextChanged
                // TODO add your handling code here:
		jTextAreaLogs.setAutoscrolls(true);
        }//GEN-LAST:event_jTextAreaLogsInputMethodTextChanged

        private void jButtonPumpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonPumpKeyPressed
                // TODO add your handling code here:
        }//GEN-LAST:event_jButtonPumpKeyPressed

        private void jButtonPumpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPumpMousePressed
                // TODO add your handling code here:
		serialSend(_pmp_,sp);
		this.dataTosend|=1;
        }//GEN-LAST:event_jButtonPumpMousePressed

        private void jButtonPumpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPumpMouseReleased
                // TODO add your handling code here:
		serialSend(_pus_,sp);
		this.dataTosend|=2;
        }//GEN-LAST:event_jButtonPumpMouseReleased

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Forming().setVisible(true);
				
			}
		});
		/* Create and display the form */
		
	}

	// TODO add your handling code here:
	//
	//
	private void  reComboBox(){
		// TODO add your handling code here:
		// TODO add your handling code here:
		comboBoxSerialPort.removeAllItems();
		AvailablePorts = SerialPort.getCommPorts();
		for (SerialPort AvailablePort : AvailablePorts) {
			comboBoxSerialPort.addItem(AvailablePort.getSystemPortName());
		}
		comboBoxSerialPort.repaint();
		labelConnection.setText("Port Refreshed");
	}
	
	public boolean serialSend(String ss,SerialPort sp_) {
		//return value for whether opening the streams is successful or not
		byte[] bb = {'\n'};
		//BaudRate = Integer.parseInt(formattedTextFieldBaud.getText());
		//sp.setComPortParameters((int) BaudRate, DataBits, StopBits, Parity); // default connection settings for Arduino
		if (sp_.isOpen()) {
			sp.writeBytes(ss.getBytes(), ss.getBytes().length);
			sp.writeBytes(bb, bb.length);
			return true;
		}

		return false;
	}
	//
	public boolean pump_(int pwm){
		
		return serialSend(_pmp_,sp);
	}
	
	public boolean handshake(SerialPort sp){
		sp.setComPortTimeouts(SerialPort.TIMEOUT_NONBLOCKING, 5000, 5000);
		
		return false;
	}
	
	public static SerialPort getSerialPort(){
		return sp;
	}
	
	public void connecting(){
		 // TODO add your handling code here:
		// TODO add your handling code here:
		BaudRate = Integer.parseInt(formattedTextFieldBaud.getText());
		labelConnection.setText("Connecting...");
//		reciver = new sub();
		
		if (sp!=null&&sp == AvailablePorts[comboBoxSerialPort.getSelectedIndex()] && sp.isOpen()) {
			labelConnection.setText(sp.toString() + "...Connected");
			return;
		}
		
		Forming.sp = AvailablePorts[comboBoxSerialPort.getSelectedIndex()];
		this.sp.openPort(1000);
		this.sp.setComPortParameters((int) BaudRate, DataBits, StopBits, Parity); // default connection settings for Arduino
		this.sp.setComPortTimeouts(SerialPort.TIMEOUT_READ_SEMI_BLOCKING, 1000, 1000); // block until bytes can be written
		
		//tm.setDelay(500);
		if (sp.isOpen()) {
			jLayeredPaneControls.setEnabled(true);
		
			labelConnection.setText("Port is open :)  "+BaudRate);
			//this.reciver.init(this.sp, 100);
		}
		else {
			labelConnection.setText("Failed to open port :(");
			return;
		}
		
		
		this.recivermaded = true;
		jTextAreaLogs.setAutoscrolls(true);
		timi();
	}
	//
	//
	public void refreshPort(){
		reComboBox();
	}
	//
	
	public  String writeBufferString(String ws){
		this.gstr = ws;
		this.jTextAreaLogs.setText(ws);
		return ws;
	}
	
	/**
	 *
	 * @param ws
	 */
	public void writeToLogger(  final String ws){
		//String ss;// = gstr;
		this.jTextAreaLogs.append(ws);
	}
	//
	private TimerTask tt(){
		
		timerTask =  new TimerTask() {
			@Override
			public void run() {
		
			serialReciver(sp);
			doCommander(strArray);
			recivedToUI();
			
			}
		};
		return timerTask;
	}

	//
	private void timi(){
		timer = new Timer("monitor");
		timer.scheduleAtFixedRate(tt(), 100, 100);
	}
	
	private void showOnProcessLabel(String ss){
		this.jLabelProcess.setText(ss);
	}

	private void serialReciver(SerialPort sp){
		
		if(sp==null){
			return;
			
		}
		
		if(sp.bytesAvailable()>0){
			byte[] spb = new byte[sp.bytesAvailable()];
			sp.readBytes(spb, sp.bytesAvailable());
			for(byte nbsp : spb){
				if(true == capsulStartCharRecived){
					if(nbsp == _EndCapsulationChar_){
						capsulStartCharRecived = false;
						capsulatedFrameRecived = true;
						//recivedStringArray.
						strArray.addElement(recivedStringBuffer);
					}
					recivedStringBuffer+=(char)(nbsp);
				}else{
					if(nbsp == _StartCapsulationChar_){
						capsulStartCharRecived = true;
						recivedStringBuffer="";
					}
				}
				writeToLogger(String.valueOf((char)(nbsp)));
			}
			
		}
	}
	
	private void doCommander(Vector rv){
		if(rv== null){
			return;
		}
		boolean commandRecived = false;
		if(rv.size()>0){
			String rs = (String)(rv.firstElement());
			String rsf3c= "";
			String rsa3c="";
			int ivalue = 0;
			if(rs != null && rs.length()>0){
				rs = rs.trim();
				if(rs.length()>3){
					rsf3c = rs.substring(0,3);
					ivalue = Integer.parseInt(rs.substring(3,rsa3c.length()));
					commandRecived = true;
					recommanded(rsf3c,ivalue);
				}
			}
			rv.remove(0);
			
		}
	} 
	
	private void recommanded(String cmd,int ival){
		if(cmd==null){
			return;
		}
		if(cmd == _pwm_){
			rduty = ival;
		}else 
		if(cmd == _prs_){
			rpressure = ival;
		}if(cmd == _dty_){
			rduty = ival;
		}else
		if(cmd == _hgt_){
			rheight = ival;
		}else
		if(cmd == _vlv_){
			ivalve = ival;
		}else
		if(cmd == _mrl_){
			imotor = ival;
		}else
		if(cmd == _mod_){
			imode = ival;
		}else
		if(cmd == _dpd_){
			idepend = ival;
		}else
		if(cmd == _hi_){
			ihi = ival;
		}else
		if(cmd == _pwm_){
			
		}
	}
	
	private void recivedToUI(){
		//jProgressBarMonitorMotorPower.setValue((int)(rduty/2.55)); 
		jLabelMonitorHeight.setText(rheight+" mm");
		jLabelMonitorPressure.setText(rpressure+" Bar");
		jLabelProcess.setText(imode+"");
		jLabelProgress.setText("remained "+(100-iremained)+"%");
		jProgressBarMonitorMotorPower.setValue((int)rduty);
		jLabelMonitorMotorPower.setText("Duty Cycle : "+rduty + " %");
		
	}
	
	static int pwm = 0;
	boolean recivermaded = false;
	static public long BaudRate = 115200;
	static public int DataBits = 8;
	static public int StopBits = SerialPort.ONE_STOP_BIT;
	static public int Parity = SerialPort.NO_PARITY;
	//static public String comportstr = "COM";
	//static public String serialPortNameList[] = {"COM0","COM1"};
	static public SerialPort sp;
	static public String gstr = "";
	static public  Buffer gbuffer;
	static public SerialPort[] AvailablePorts;
	String default_fire_password = "8";
	final String _hi_ ="hio";
	final String _pmp_ ="pmp";
	final String _rls_ ="rls";
	final String _inc_ ="inc";
	final String _dec_ ="dec";
	final String _pwm_ ="pwm";
	final String _new_ ="new";
	final String _set_ ="set";
	final String _stp_ ="stp";
	final String _pus_ ="pus";
	final String _run_ ="run";
	final String _prs_ ="prs";
	final String _hgt_ ="hgt";
	final String _mod_ ="mod";
	final String _wrt_ ="wrt";
	final String _rjb_ ="rjb";
	final String _rdd_ ="rdd";
	final String _dty_ ="dty";
	final String _mrl_ ="mrl";
	final String _drl_ ="drl";
	final String _vlv_ ="vlv";
	final String _dpd_ ="dpd";
	
	final char _pressure_ =';';
	final char _height_ =':';
	final char _duty_ =',';
	private int rpressure;
	private int rheight;
	private int rduty;
	private int imode;
	private int imotor;
	private int ivalve;
	private int idepend;
	private int ihi ;
	private int iremained;
	//public static sub reciver ;
	/** Port data is coming from */
	//private SerialPort commPort;
	int dataTosend=0;
	char[] sendingBufferchar;
	byte[] sendingBufferbyte;
	String sendingBufferstr;
	/** String buffer for serial data */
	private boolean capsulStartCharRecived;
	private boolean capsulatedFrameRecived;
	private String[] recivedStringArray;
	private String recivedStringBuffer;
	private ActionListener timeractionlistener ;
	private Timer timer ;
	private TimerTask timerTask ;
	/** model of the view */
	//private final SensorBean bean = null;
	private Vector strArray;
	
	final char _EndCapsulationChar_ = 253;
	final char _StartCapsulationChar_ = 251;
	final String[] strArraysend = {_pus_,_pmp_,_pwm_,_set_,_run_,_stp_,_rls_,_hi_};
	private long lastTimeDataReceived;
	private String strPressure="",strCaliper="",strDuty="",sbuff="";
	private float pressure=0,duty=0,caliper=0;
	private Thread serialThread;
	private  StringBuilder data;
	private boolean dataRecieved = false;
	private boolean btnRefreshPressed = false;
	private boolean btnRefreshReleased = false;
	private boolean btnConnectPressed = false;
	private boolean btnConnectReleased = false;
	
	private boolean btnPumpPressed = false;
	private boolean btnPumpReleased = false;
	private boolean btnDrainPressed = false;
	private boolean btnDrainReleased = false;
	private boolean btnSavePressed = false;
	private boolean btnSaveReleased = false;
	private boolean btnRunPressed = false;
	private boolean btnRunReleased = false;
	private boolean btnStopPressed = false;
	private boolean btnStopReleased = false;
	private boolean dutyChangeWrite = false;
	private boolean dutyChangeRead = false;
	private boolean comboSerialoChange = false;
	private boolean connectionChange = false;
	private boolean modeChange = false;
	private boolean jobDone = false;
        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JMenuItem CloseMenuItem;
        private javax.swing.JMenuItem aboutMenuItem;
        private javax.swing.JMenuItem checkMenuItem;
        private javax.swing.JComboBox<String> comboBoxSerialPort;
        private javax.swing.JMenuItem connectMenuItem;
        private javax.swing.JMenuItem contentsMenuItem;
        private javax.swing.JMenuItem exitMenuItem;
        private javax.swing.JMenu fileMenu;
        private javax.swing.JFormattedTextField formattedTextFieldBaud;
        private javax.swing.JMenu helpMenu;
        private javax.swing.JButton jButtonConnect;
        private javax.swing.JButton jButtonDrain;
        private javax.swing.JButton jButtonPump;
        private javax.swing.JButton jButtonRefresh;
        private javax.swing.JButton jButtonRun;
        private javax.swing.JButton jButtonSave;
        private javax.swing.JButton jButtonStop;
        private javax.swing.JFormattedTextField jFormattedTextFieldHeghit;
        private javax.swing.JFormattedTextField jFormattedTextFieldPressure;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JLabel jLabelMonitorHeight;
        private javax.swing.JLabel jLabelMonitorMotorPower;
        private javax.swing.JLabel jLabelMonitorPressure;
        private javax.swing.JLabel jLabelProcess;
        private javax.swing.JLabel jLabelProgress;
        private javax.swing.JLabel jLabelPwm;
        private javax.swing.JLayeredPane jLayeredPane1;
        private javax.swing.JLayeredPane jLayeredPane2;
        private javax.swing.JLayeredPane jLayeredPane3;
        private javax.swing.JLayeredPane jLayeredPane4;
        private javax.swing.JLayeredPane jLayeredPaneControl;
        private javax.swing.JLayeredPane jLayeredPaneControls;
        private javax.swing.JLayeredPane jLayeredPaneHeight;
        private javax.swing.JLayeredPane jLayeredPanePressure;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JPanel jPanel2;
        private javax.swing.JPanel jPanel3;
        private javax.swing.JPanel jPanel4;
        private javax.swing.JProgressBar jProgressBarJobDone;
        private javax.swing.JProgressBar jProgressBarMonitorMotorPower;
        private javax.swing.JScrollBar jScrollBarPwm;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JPopupMenu.Separator jSeparator1;
        private javax.swing.JPopupMenu.Separator jSeparator2;
        private javax.swing.JPopupMenu.Separator jSeparator3;
        private javax.swing.JPopupMenu.Separator jSeparator4;
        private javax.swing.JSeparator jSeparator5;
        private javax.swing.JTextArea jTextAreaLogs;
        private javax.swing.JLabel labelConnection;
        private javax.swing.JLayeredPane layeredPaneTopMainPane;
        private javax.swing.JPanel mainPanel;
        private javax.swing.JMenuBar menuBar;
        private javax.swing.JMenuItem newMenuItem;
        private javax.swing.JMenuItem openMenuItem;
        private javax.swing.JMenu portMenu;
        private javax.swing.JMenuItem refreshMenuItem;
        private javax.swing.JMenuItem runMenuItem;
        private javax.swing.JMenuItem saveAsMenuItem;
        private javax.swing.JMenuItem saveMenuItem;
        // End of variables declaration//GEN-END:variables

}
